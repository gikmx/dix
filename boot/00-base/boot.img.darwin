#! /usr/bin/env bash
! $DOTFILES && >&2 echo "DOTFILES404" && exit 1
! sys.is_darwin && sys.error "406" && exit 1

# instead of a big list, run install for every package
Packages=(
    'coreutils'
    'binutils'
    'moreutils'
    'bash'
    'openssh'
    'git'
    'findutils --with-default-names'
    'grep      --with-default-names'
    'gnu-tar   --with-default-names'
    'gnu-sed   --with-default-names'
    'gnu-which --with-default-names'
    'gawk'
    'gzip'
    'wget'
    'less'
    'rsync'
    'unzip'
    'bash-completion'
)

# Run this after each successful installation
post(){

    if [[ $1 == 'bash' ]]; then
        log.info "Updating Bash ..."
        sudo echo "$(brew --prefix)/bin/bash" >> /etc/shells
        sudo chsh -s "$(brew --prefix)/bin/bash"
    fi

    log.info "Post installation for $1 ..."

    # Reload the environment after every installation
    boot.reload
    log.info "Installed $1"
}

# If not available, install homebrew.
if ! sys.has_brew; then
    log.info "Installing Homebrew â€¦"
    url='https://raw.githubusercontent.com/Homebrew/install/master/install'
    /usr/bin/ruby -e "$(curl -fsSL $url)" < /dev/null
    unset url
fi

# Allow brew to download packages with duplicated system functionallity
# that may provide more recent or bugfix versions.
brew tap homebrew/dupes

# Install packages and call 'post' after every successfull installation
brew.install Packages[@] post

log.info "Configuring GIT credentials ..."
echo

# Set the author name
tmp=$(dscacheutil -q user -a name $(whoami) | fgrep gecos | sed -e 's/.*gecos: \(.*\)/\1/')
read -p "Your name? [$tmp] " input
[ -z "$input" ] && input=$tmp
echo "$input" > $DOTFILES_PATH_SRV/GIT_AUTHOR_NAME

# Set the author email
tmp="$(whoami)@$(hostname)"
read -p "Your email address? ["$tmp"]" input
[ -z "$input" ] && name=$tmp
echo "$input" > $DOTFILES_PATH_SRV/GIT_AUTHOR_EMAIL

boot.pkg_enable $DOTFILES_PKG
boot.profile
